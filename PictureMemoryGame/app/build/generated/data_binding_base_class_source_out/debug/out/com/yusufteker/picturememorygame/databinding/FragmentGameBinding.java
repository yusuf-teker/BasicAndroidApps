// Generated by view binder compiler. Do not edit!
package com.yusufteker.picturememorygame.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Chronometer;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.gridlayout.widget.GridLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.yusufteker.picturememorygame.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentGameBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final GridLayout gridLayout;

  @NonNull
  public final ImageButton imageView1;

  @NonNull
  public final ImageButton imageView10;

  @NonNull
  public final ImageButton imageView11;

  @NonNull
  public final ImageButton imageView12;

  @NonNull
  public final ImageButton imageView2;

  @NonNull
  public final ImageButton imageView3;

  @NonNull
  public final ImageButton imageView4;

  @NonNull
  public final ImageButton imageView5;

  @NonNull
  public final ImageButton imageView6;

  @NonNull
  public final ImageButton imageView7;

  @NonNull
  public final ImageButton imageView8;

  @NonNull
  public final ImageButton imageView9;

  @NonNull
  public final Chronometer simpleChronometer;

  private FragmentGameBinding(@NonNull FrameLayout rootView, @NonNull GridLayout gridLayout,
      @NonNull ImageButton imageView1, @NonNull ImageButton imageView10,
      @NonNull ImageButton imageView11, @NonNull ImageButton imageView12,
      @NonNull ImageButton imageView2, @NonNull ImageButton imageView3,
      @NonNull ImageButton imageView4, @NonNull ImageButton imageView5,
      @NonNull ImageButton imageView6, @NonNull ImageButton imageView7,
      @NonNull ImageButton imageView8, @NonNull ImageButton imageView9,
      @NonNull Chronometer simpleChronometer) {
    this.rootView = rootView;
    this.gridLayout = gridLayout;
    this.imageView1 = imageView1;
    this.imageView10 = imageView10;
    this.imageView11 = imageView11;
    this.imageView12 = imageView12;
    this.imageView2 = imageView2;
    this.imageView3 = imageView3;
    this.imageView4 = imageView4;
    this.imageView5 = imageView5;
    this.imageView6 = imageView6;
    this.imageView7 = imageView7;
    this.imageView8 = imageView8;
    this.imageView9 = imageView9;
    this.simpleChronometer = simpleChronometer;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentGameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentGameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_game, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentGameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.gridLayout;
      GridLayout gridLayout = ViewBindings.findChildViewById(rootView, id);
      if (gridLayout == null) {
        break missingId;
      }

      id = R.id.imageView1;
      ImageButton imageView1 = ViewBindings.findChildViewById(rootView, id);
      if (imageView1 == null) {
        break missingId;
      }

      id = R.id.imageView10;
      ImageButton imageView10 = ViewBindings.findChildViewById(rootView, id);
      if (imageView10 == null) {
        break missingId;
      }

      id = R.id.imageView11;
      ImageButton imageView11 = ViewBindings.findChildViewById(rootView, id);
      if (imageView11 == null) {
        break missingId;
      }

      id = R.id.imageView12;
      ImageButton imageView12 = ViewBindings.findChildViewById(rootView, id);
      if (imageView12 == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageButton imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageButton imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageButton imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.imageView5;
      ImageButton imageView5 = ViewBindings.findChildViewById(rootView, id);
      if (imageView5 == null) {
        break missingId;
      }

      id = R.id.imageView6;
      ImageButton imageView6 = ViewBindings.findChildViewById(rootView, id);
      if (imageView6 == null) {
        break missingId;
      }

      id = R.id.imageView7;
      ImageButton imageView7 = ViewBindings.findChildViewById(rootView, id);
      if (imageView7 == null) {
        break missingId;
      }

      id = R.id.imageView8;
      ImageButton imageView8 = ViewBindings.findChildViewById(rootView, id);
      if (imageView8 == null) {
        break missingId;
      }

      id = R.id.imageView9;
      ImageButton imageView9 = ViewBindings.findChildViewById(rootView, id);
      if (imageView9 == null) {
        break missingId;
      }

      id = R.id.simpleChronometer;
      Chronometer simpleChronometer = ViewBindings.findChildViewById(rootView, id);
      if (simpleChronometer == null) {
        break missingId;
      }

      return new FragmentGameBinding((FrameLayout) rootView, gridLayout, imageView1, imageView10,
          imageView11, imageView12, imageView2, imageView3, imageView4, imageView5, imageView6,
          imageView7, imageView8, imageView9, simpleChronometer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
